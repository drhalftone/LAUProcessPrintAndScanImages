#version 330 core

// THIS FRAGMENT SHADER APPLIES AN 8X8 MATRIX TRANSFORM TO EIGHT CONSECUTIVE PIXELS PER ROW

// SET THE NUMBER OF FILTERS AND THE LENGTH OF EACH IN WEIGHTS
#define NUMFILTERS  8

uniform sampler2D qt_texture;  // THIS TEXTURE HOLDS THE XYZ+TEXTURE COORDINATES

// DEFINE THE CONVOLUTIONAL FILTER WEIGHTS
const float weights[64] = float[64]( -0.167177736759,   0.183771848679,   0.134663581848,   0.350525945425,   0.401534438133,  -0.313063502312,   0.090772248805,  -0.568509995937,
                                     -0.745317459106,   0.132868751884,  -0.141296327114,  -0.177408307791,   0.399499505758,   0.009974382818,  -0.017520075664,   0.231706768274,
                                      0.184803888202,  -0.086754024029,  -0.542469203472,  -0.484202653170,   0.364408463240,  -0.711220383644,  -0.188088446856,  -0.633540451527,
                                      0.407164007425,   0.087959259748,  -0.147475808859,  -0.194626003504,  -0.640598416328,   0.092205740511,  -0.727435767651,  -0.740044772625,
                                      0.202349856496,  -0.323401033878,   0.535564839840,   0.546083033085,   0.372889101505,  -0.299593985081,   0.361164122820,   0.235397294164,
                                      0.754888117313,   0.352689921856,   0.513922095299,   0.101016625762,   0.018112195656,   0.527305364609,  -0.343867272139,  -0.236227884889,
                                     -0.575569570065,  -0.303646862507,   0.259464085102,   0.213934585452,  -0.638612389565,  -0.252259850502,  -0.132868692279,  -0.314398795366,
                                      0.361597150564,   0.320964604616,  -0.113695725799,   0.068403162062,  -0.496698468924,   0.715686440468,  -0.246570497751,  -0.275269240141);

const float bias[8] = float[8](-0.067167676985,  -0.062638901174,  -0.061932139099,  -0.062150426209,   0.063142329454,   0.063045971096,  -0.063131168485,   0.061684869230);

layout(location = 0, index = 0) out vec4 qt_fragColor;

void main()
{
    // GET THE CURRENT FRAGMENT COORDINATE IN PIXELS
    ivec2 position = ivec2(gl_FragCoord.xy);

    // DETERMINE WHAT MATRIX ROW TO USE BASED ON COLUMN COORDINATE
    int index = position.x % NUMFILTERS;

    // INITIALIZE THE OUTPUT PIXEL TO THE FIRST PIXEL IN THE SWATH
    qt_fragColor = vec4(0.0, 0.0, 0.0, 0.0);

    // ITERATE OVER CURRENT 8 INPUT PIXELS
    for (int c = 0; c < NUMFILTERS; c++){
        qt_fragColor += weights[NUMFILTERS * index + c] * texelFetch(qt_texture, ivec2(position.x / NUMFILTERS + c, position.y), 0);
    }

    // ADD IN THE FILTER BIAS
    qt_fragColor += bias[index];
}
